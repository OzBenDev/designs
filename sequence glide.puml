@startuml

participant ViewController_Fragment

participant List_Data

participant Adapter

participant ViewHolder

participant Glide

ViewController_Fragment -> Adapter: create(DownloadController::handleRequest, List_Data)

group getItemViewType

group override getItemViewType
Adapter -> Adapter: return List_Data[position].type
end

group override OnCreateViewHolder
    alt viewType == TYPE 1
        Adapter -> ViewHolder: create TYPE_1(inflated viewType, handleRequest)
    else
        Adapter -> ViewHolder: create TYPE_2(inflated viewType, handleRequest)
    end
end

group #PeachPuff override onBindViewHolder calls ViewHolder.onBind(List_Data[position])

    group #ivory if the dataObject has a url handle
        ViewHolder -> Glide: load(url).Into(Container)
        note right: Glide updates the Container with the drawable \n prior to updating the dataObject
        Glide --> ViewHolder: OnResourceReady(T)
        ViewHolder --> Adapter: callback(t:T)
        Adapter -> List_Data: List_Data[position].update(t)
    end
end

@enduml